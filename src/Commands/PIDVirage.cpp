// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "PIDVirage.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

PIDVirage::PIDVirage(double angleConsigne): Command()
{
    m_angleConsigne = angleConsigne;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::baseRoulante.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

	angleParcouru = 0;
	erreur = 0;
	erreurPrecedente = 0;
	sommeErreurs = 0;
	differenceErreurs = 0;
	vitesse = 0;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

void PIDVirage::Initialize()
{
	Robot::baseRoulante->ResetPID();
	erreurPrecedente = 0;
	sommeErreurs = 0;
}

void PIDVirage::Execute()
{
	angleParcouru = Robot::baseRoulante->GetGyro();

	erreur = m_angleConsigne - angleParcouru;
	sommeErreurs += erreur;
	differenceErreurs = erreur - erreurPrecedente;

	vitesse = kP * erreur + kI * sommeErreurs + kD * differenceErreurs;

	Robot::baseRoulante->Drive(vitesse, -vitesse);

	erreurPrecedente = erreur;
}

bool PIDVirage::IsFinished()
{
	return 	abs(erreur) < tolerance;
}

void PIDVirage::End()
{
	Robot::baseRoulante->Drive(0, 0);
}

void PIDVirage::Interrupted()
{
	this->End();
}
